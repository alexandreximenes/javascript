{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAuB;AAAA;;AACnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAW;AAAA;;AAEhB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,WAAL,CACbO,WADa,CACD,CAAC,MAAKN,MAAN,CADC,EACc,WADd,EAEbO,WAFa,CAED,MAAKP,MAFJ,EAGbQ,GAHa,CAGTP,UAHS,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBN,2BAAO,2CAAP;AACAO,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACH,iBAHD;AAKH,aAhBM,CAAP;AAkBH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIb,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAsB;AACtC,oBAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAK;AACpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;AACA,wBAAGD,KAAH,EAAS;AACL,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBAJD,MAIK;AACDzB,gCAAQe,WAAR;AACH;AACJ,iBATD;;AAWAF,uBAAON,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAec,IAA3B;AAEH,iBAHD;AAKH,aAxBM,CAAP;AAyBH;;;qCAEW;AAAA;;AACR,mBAAO,IAAI3B,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrC,oBAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX8B,KAHW,EAAd;;AAKEzB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,6BAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQK,OAAR,GAAkB;AAAA,2BAAKN,OAAO,mCAAP,CAAL;AAAA,iBAAlB;AACL,aATM,CAAP;AAUH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao{\r\n\r\n    constructor(connection){\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n            .transaction([this._store], 'readwrite')\r\n            .objectStore(this._store)\r\n            .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();       \r\n            };\r\n\r\n            request.onerror = e => {\r\n                reject('Não foi possivel adicionar uma negociacao');\r\n                console.log(e.target.error);\r\n            }\r\n        \r\n        });\r\n\r\n    }\r\n\r\n    listaTodos(){\r\n        return new Promise( (resolve, reject)  => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;\r\n                if(atual){\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                }else{\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error.name);\r\n                \r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    apagaTodos(){\r\n        return new Promise( (resolve, reject) => {\r\n            let request = this._connection\r\n              .transaction([this._store], \"readwrite\")\r\n              .objectStore(this._store)\r\n              .clear();\r\n\r\n              request.onsuccess = e => resolve('Dados apagados com sucesso!');\r\n\r\n              request.onerror = e => reject(\"Não foi possivel apagar os dados!\");\r\n        });\r\n    }\r\n}"]}