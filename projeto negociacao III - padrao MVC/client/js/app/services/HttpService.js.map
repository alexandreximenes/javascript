{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handlerError","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;sCAEYC,G,EAAI;AACd,gBAAG,CAACA,IAAIC,EAAR,EAAY,OAAO,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAP;AACZ,mBAAOH,GAAP;AACH;;;4BACGI,G,EAAK;AAAA;;AAEL;;AAEA,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADH,EAEFM,IAFE,CAEG;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFH,CAAP;;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAwBH;;;6BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAER,mBAAOJ,MAAMD,GAAN,EAAW;AACdM,yBAAS,EAAC,gBAAiB,kBAAlB,EADK;AAEdC,wBAAQ,MAFM;AAGdC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,aAAX,EAKNH,IALM,CAKD;AAAA,uBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALC,CAAP;;AAOA;;;;;;;;;;;;;;;;AAsBH","file":"HttpService.js","sourcesContent":["class HttpService {\n    \n    _handlerError(res){\n        if(!res.ok) return new Error(res.statusText)\n        return res;\n    }\n    get(url) {\n        \n        // Usando fetch api\n\n        return fetch(url)\n            .then(res => this._handlerError(res))\n            .then(res => res.json());\n\n\n        //Substituido pelo codigo acima, api fetch\n        /*return new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            \n            xhr.open('GET', url);\n            \n            xhr.onreadystatechange = () => {\n                    \n                if(xhr.readyState == 4) {\n                    \n                    if(xhr.status == 200) {   \n                        \n                        resolve(JSON.parse(xhr.responseText));  \n                    } else {\n                        \n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            \n            xhr.send();\n             \n            \n        });*/\n    }\n    \n    post(url, dado) {\n\n            return fetch(url, {\n                headers: {\"Content-type\" : \"application/json\"},\n                method: 'post',\n                body: JSON.stringify(dado)\n            })\n            .then(res => this._handlerError(res));\n\n            /*\n            return new Promise((resolve, reject) => {\n\n                let xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url, true);\n                xhr.setRequestHeader(\"Content-type\", \"application/json\");\n                xhr.onreadystatechange = () => {\n\n                    if (xhr.readyState == 4) {\n\n                        if (xhr.status == 200) {\n\n                            resolve(JSON.parse(xhr.responseText));\n                        } else {\n\n                            reject(xhr.responseText);\n                        }\n                    }\n                };\n                xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n            });*/\n\n        }\n}"]}